ttest:
  image: {{cookiecutter.docker_test_image}}
  variables:
    WORKDIR: "$CI_PROJECT_DIR"
  script:
    - /start.sh -c local -i localhost, -vvv

### use a test-specific inventory
### set test-specific vars in group_vars/test_group_name
# test:
#   image: {{cookiecutter.docker_test_image}}
#   variables:
#     WORKDIR: "$CI_PROJECT_DIR"
#   script:
#     - /start.sh -i inventory/test -vvv
# 

### use a separate test play and a manual inventory
### set test-specific vars in host_vars/localhost
# test:
#   image: {{cookiecutter.docker_test_image}}
#   variables:
#     WORKDIR: "$CI_PROJECT_DIR"
#     PLAYBOOK: test.yml
#   script:
#     - /start.sh -c local -i localhost, -vvv
# 

### package up an "executable" Docker image with this playbook and it's dependencies
### then ship it to artifactory. see GitLab docs for info on setting secret vars.
# build:
#   script:
#     # set docker image tag to latest if branch == master, else use branch name
#     - export TAG=$(if [ $CI_COMMIT_REF_SLUG != 'master' ]; then echo $CI_COMMIT_REF_SLUG; else echo 'latest'; fi)
#     - docker login -u $ARTIFACTORY_DOCKER_USER -p $ARTIFACTORY_DOCKER_PASS $ARTIFACTORY_DOCKER_URL
#     - docker build -t $ARTIFACTORY_DOCKER_URL/$CI_PROJECT_NAME:$TAG .
#     - docker push $ARTIFACTORY_DOCKER_URL/$CI_PROJECT_NAME:$TAG
# 
